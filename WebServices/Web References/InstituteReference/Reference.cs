//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WebServices.InstituteReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="InstituteBuildingCard_Binding", Namespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard")]
    public partial class InstituteBuildingCard_Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadByRecIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUpdatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecIdFromKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMultipleOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public InstituteBuildingCard_Service() {
            this.Url = global::WebServices.Properties.Settings.Default.WebServices_InstituteReference_InstituteBuildingCard_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReadCompletedEventHandler ReadCompleted;
        
        /// <remarks/>
        public event ReadByRecIdCompletedEventHandler ReadByRecIdCompleted;
        
        /// <remarks/>
        public event ReadMultipleCompletedEventHandler ReadMultipleCompleted;
        
        /// <remarks/>
        public event IsUpdatedCompletedEventHandler IsUpdatedCompleted;
        
        /// <remarks/>
        public event GetRecIdFromKeyCompletedEventHandler GetRecIdFromKeyCompleted;
        
        /// <remarks/>
        public event CreateCompletedEventHandler CreateCompleted;
        
        /// <remarks/>
        public event CreateMultipleCompletedEventHandler CreateMultipleCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event UpdateMultipleCompletedEventHandler UpdateMultipleCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/institutebuildingcard:Read", RequestNamespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard", ResponseElementName="Read_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("InstituteBuildingCard")]
        public InstituteBuildingCard Read(string Block_Code) {
            object[] results = this.Invoke("Read", new object[] {
                        Block_Code});
            return ((InstituteBuildingCard)(results[0]));
        }
        
        /// <remarks/>
        public void ReadAsync(string Block_Code) {
            this.ReadAsync(Block_Code, null);
        }
        
        /// <remarks/>
        public void ReadAsync(string Block_Code, object userState) {
            if ((this.ReadOperationCompleted == null)) {
                this.ReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadOperationCompleted);
            }
            this.InvokeAsync("Read", new object[] {
                        Block_Code}, this.ReadOperationCompleted, userState);
        }
        
        private void OnReadOperationCompleted(object arg) {
            if ((this.ReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadCompleted(this, new ReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/institutebuildingcard:ReadByRecId", RequestNamespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard", ResponseElementName="ReadByRecId_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("InstituteBuildingCard")]
        public InstituteBuildingCard ReadByRecId(string recId) {
            object[] results = this.Invoke("ReadByRecId", new object[] {
                        recId});
            return ((InstituteBuildingCard)(results[0]));
        }
        
        /// <remarks/>
        public void ReadByRecIdAsync(string recId) {
            this.ReadByRecIdAsync(recId, null);
        }
        
        /// <remarks/>
        public void ReadByRecIdAsync(string recId, object userState) {
            if ((this.ReadByRecIdOperationCompleted == null)) {
                this.ReadByRecIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadByRecIdOperationCompleted);
            }
            this.InvokeAsync("ReadByRecId", new object[] {
                        recId}, this.ReadByRecIdOperationCompleted, userState);
        }
        
        private void OnReadByRecIdOperationCompleted(object arg) {
            if ((this.ReadByRecIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadByRecIdCompleted(this, new ReadByRecIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/institutebuildingcard:ReadMultiple", RequestNamespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard", ResponseElementName="ReadMultiple_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ReadMultiple_Result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public InstituteBuildingCard[] ReadMultiple([System.Xml.Serialization.XmlElementAttribute("filter")] InstituteBuildingCard_Filter[] filter, string bookmarkKey, int setSize) {
            object[] results = this.Invoke("ReadMultiple", new object[] {
                        filter,
                        bookmarkKey,
                        setSize});
            return ((InstituteBuildingCard[])(results[0]));
        }
        
        /// <remarks/>
        public void ReadMultipleAsync(InstituteBuildingCard_Filter[] filter, string bookmarkKey, int setSize) {
            this.ReadMultipleAsync(filter, bookmarkKey, setSize, null);
        }
        
        /// <remarks/>
        public void ReadMultipleAsync(InstituteBuildingCard_Filter[] filter, string bookmarkKey, int setSize, object userState) {
            if ((this.ReadMultipleOperationCompleted == null)) {
                this.ReadMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadMultipleOperationCompleted);
            }
            this.InvokeAsync("ReadMultiple", new object[] {
                        filter,
                        bookmarkKey,
                        setSize}, this.ReadMultipleOperationCompleted, userState);
        }
        
        private void OnReadMultipleOperationCompleted(object arg) {
            if ((this.ReadMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadMultipleCompleted(this, new ReadMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/institutebuildingcard:IsUpdated", RequestNamespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard", ResponseElementName="IsUpdated_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("IsUpdated_Result")]
        public bool IsUpdated(string Key) {
            object[] results = this.Invoke("IsUpdated", new object[] {
                        Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUpdatedAsync(string Key) {
            this.IsUpdatedAsync(Key, null);
        }
        
        /// <remarks/>
        public void IsUpdatedAsync(string Key, object userState) {
            if ((this.IsUpdatedOperationCompleted == null)) {
                this.IsUpdatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUpdatedOperationCompleted);
            }
            this.InvokeAsync("IsUpdated", new object[] {
                        Key}, this.IsUpdatedOperationCompleted, userState);
        }
        
        private void OnIsUpdatedOperationCompleted(object arg) {
            if ((this.IsUpdatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUpdatedCompleted(this, new IsUpdatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/institutebuildingcard:GetRecIdFromKey", RequestNamespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard", ResponseElementName="GetRecIdFromKey_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetRecIdFromKey_Result")]
        public string GetRecIdFromKey(string Key) {
            object[] results = this.Invoke("GetRecIdFromKey", new object[] {
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecIdFromKeyAsync(string Key) {
            this.GetRecIdFromKeyAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetRecIdFromKeyAsync(string Key, object userState) {
            if ((this.GetRecIdFromKeyOperationCompleted == null)) {
                this.GetRecIdFromKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecIdFromKeyOperationCompleted);
            }
            this.InvokeAsync("GetRecIdFromKey", new object[] {
                        Key}, this.GetRecIdFromKeyOperationCompleted, userState);
        }
        
        private void OnGetRecIdFromKeyOperationCompleted(object arg) {
            if ((this.GetRecIdFromKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecIdFromKeyCompleted(this, new GetRecIdFromKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/institutebuildingcard:Create", RequestNamespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard", ResponseElementName="Create_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Create(ref InstituteBuildingCard InstituteBuildingCard) {
            object[] results = this.Invoke("Create", new object[] {
                        InstituteBuildingCard});
            InstituteBuildingCard = ((InstituteBuildingCard)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAsync(InstituteBuildingCard InstituteBuildingCard) {
            this.CreateAsync(InstituteBuildingCard, null);
        }
        
        /// <remarks/>
        public void CreateAsync(InstituteBuildingCard InstituteBuildingCard, object userState) {
            if ((this.CreateOperationCompleted == null)) {
                this.CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOperationCompleted);
            }
            this.InvokeAsync("Create", new object[] {
                        InstituteBuildingCard}, this.CreateOperationCompleted, userState);
        }
        
        private void OnCreateOperationCompleted(object arg) {
            if ((this.CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCompleted(this, new CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/institutebuildingcard:CreateMultiple", RequestNamespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard", ResponseElementName="CreateMultiple_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateMultiple([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref InstituteBuildingCard[] InstituteBuildingCard_List) {
            object[] results = this.Invoke("CreateMultiple", new object[] {
                        InstituteBuildingCard_List});
            InstituteBuildingCard_List = ((InstituteBuildingCard[])(results[0]));
        }
        
        /// <remarks/>
        public void CreateMultipleAsync(InstituteBuildingCard[] InstituteBuildingCard_List) {
            this.CreateMultipleAsync(InstituteBuildingCard_List, null);
        }
        
        /// <remarks/>
        public void CreateMultipleAsync(InstituteBuildingCard[] InstituteBuildingCard_List, object userState) {
            if ((this.CreateMultipleOperationCompleted == null)) {
                this.CreateMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMultipleOperationCompleted);
            }
            this.InvokeAsync("CreateMultiple", new object[] {
                        InstituteBuildingCard_List}, this.CreateMultipleOperationCompleted, userState);
        }
        
        private void OnCreateMultipleOperationCompleted(object arg) {
            if ((this.CreateMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMultipleCompleted(this, new CreateMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/institutebuildingcard:Update", RequestNamespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard", ResponseElementName="Update_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update(ref InstituteBuildingCard InstituteBuildingCard) {
            object[] results = this.Invoke("Update", new object[] {
                        InstituteBuildingCard});
            InstituteBuildingCard = ((InstituteBuildingCard)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAsync(InstituteBuildingCard InstituteBuildingCard) {
            this.UpdateAsync(InstituteBuildingCard, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(InstituteBuildingCard InstituteBuildingCard, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        InstituteBuildingCard}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/institutebuildingcard:UpdateMultiple", RequestNamespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard", ResponseElementName="UpdateMultiple_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateMultiple([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref InstituteBuildingCard[] InstituteBuildingCard_List) {
            object[] results = this.Invoke("UpdateMultiple", new object[] {
                        InstituteBuildingCard_List});
            InstituteBuildingCard_List = ((InstituteBuildingCard[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMultipleAsync(InstituteBuildingCard[] InstituteBuildingCard_List) {
            this.UpdateMultipleAsync(InstituteBuildingCard_List, null);
        }
        
        /// <remarks/>
        public void UpdateMultipleAsync(InstituteBuildingCard[] InstituteBuildingCard_List, object userState) {
            if ((this.UpdateMultipleOperationCompleted == null)) {
                this.UpdateMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMultipleOperationCompleted);
            }
            this.InvokeAsync("UpdateMultiple", new object[] {
                        InstituteBuildingCard_List}, this.UpdateMultipleOperationCompleted, userState);
        }
        
        private void OnUpdateMultipleOperationCompleted(object arg) {
            if ((this.UpdateMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMultipleCompleted(this, new UpdateMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard")]
    public partial class InstituteBuildingCard {
        
        private string keyField;
        
        private string block_CodeField;
        
        private string block_Name_if_anyField;
        
        private string block_Type_if_anyField;
        
        private int no_Of_Class_RoomField;
        
        private bool no_Of_Class_RoomFieldSpecified;
        
        private int no_Of_FloorField;
        
        private bool no_Of_FloorFieldSpecified;
        
        private decimal total_Floor_Area_in_sqftField;
        
        private bool total_Floor_Area_in_sqftFieldSpecified;
        
        private int building_Length_in_meterField;
        
        private bool building_Length_in_meterFieldSpecified;
        
        private int building_Width_in_meterField;
        
        private bool building_Width_in_meterFieldSpecified;
        
        private int building_Height_in_meterField;
        
        private bool building_Height_in_meterFieldSpecified;
        
        private Fire_Safety_Status fire_Safety_StatusField;
        
        private bool fire_Safety_StatusFieldSpecified;
        
        private System.DateTime fire_Safety_Valid_UptoField;
        
        private bool fire_Safety_Valid_UptoFieldSpecified;
        
        private string layout_Plan_NoField;
        
        private Approval_Status approval_StatusField;
        
        private bool approval_StatusFieldSpecified;
        
        private string electricity_AgencyField;
        
        private Book_Of_Account book_Of_AccountField;
        
        private bool book_Of_AccountFieldSpecified;
        
        private string electricity_Load_in_KWField;
        
        private string electricity_Consumer_NoField;
        
        private Transformer_Type transformer_TypeField;
        
        private bool transformer_TypeFieldSpecified;
        
        private Source_Of_Water source_Of_WaterField;
        
        private bool source_Of_WaterFieldSpecified;
        
        private string pHD_Consumer_NoField;
        
        private Building_Safety_Status building_Safety_StatusField;
        
        private bool building_Safety_StatusFieldSpecified;
        
        private int year_of_ConstructionField;
        
        private bool year_of_ConstructionFieldSpecified;
        
        private int no_of_Smart_ClassesField;
        
        private bool no_of_Smart_ClassesFieldSpecified;
        
        private Computer_Lab_Available computer_Lab_AvailableField;
        
        private bool computer_Lab_AvailableFieldSpecified;
        
        private int no_of_RO_Water_PurifierField;
        
        private bool no_of_RO_Water_PurifierFieldSpecified;
        
        private int no_of_Non_RO_Water_PurifierField;
        
        private bool no_of_Non_RO_Water_PurifierFieldSpecified;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Block_Code {
            get {
                return this.block_CodeField;
            }
            set {
                this.block_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Block_Name_if_any {
            get {
                return this.block_Name_if_anyField;
            }
            set {
                this.block_Name_if_anyField = value;
            }
        }
        
        /// <remarks/>
        public string Block_Type_if_any {
            get {
                return this.block_Type_if_anyField;
            }
            set {
                this.block_Type_if_anyField = value;
            }
        }
        
        /// <remarks/>
        public int No_Of_Class_Room {
            get {
                return this.no_Of_Class_RoomField;
            }
            set {
                this.no_Of_Class_RoomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool No_Of_Class_RoomSpecified {
            get {
                return this.no_Of_Class_RoomFieldSpecified;
            }
            set {
                this.no_Of_Class_RoomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int No_Of_Floor {
            get {
                return this.no_Of_FloorField;
            }
            set {
                this.no_Of_FloorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool No_Of_FloorSpecified {
            get {
                return this.no_Of_FloorFieldSpecified;
            }
            set {
                this.no_Of_FloorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Total_Floor_Area_in_sqft {
            get {
                return this.total_Floor_Area_in_sqftField;
            }
            set {
                this.total_Floor_Area_in_sqftField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Total_Floor_Area_in_sqftSpecified {
            get {
                return this.total_Floor_Area_in_sqftFieldSpecified;
            }
            set {
                this.total_Floor_Area_in_sqftFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Building_Length_in_meter {
            get {
                return this.building_Length_in_meterField;
            }
            set {
                this.building_Length_in_meterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Building_Length_in_meterSpecified {
            get {
                return this.building_Length_in_meterFieldSpecified;
            }
            set {
                this.building_Length_in_meterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Building_Width_in_meter {
            get {
                return this.building_Width_in_meterField;
            }
            set {
                this.building_Width_in_meterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Building_Width_in_meterSpecified {
            get {
                return this.building_Width_in_meterFieldSpecified;
            }
            set {
                this.building_Width_in_meterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Building_Height_in_meter {
            get {
                return this.building_Height_in_meterField;
            }
            set {
                this.building_Height_in_meterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Building_Height_in_meterSpecified {
            get {
                return this.building_Height_in_meterFieldSpecified;
            }
            set {
                this.building_Height_in_meterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Fire_Safety_Status Fire_Safety_Status {
            get {
                return this.fire_Safety_StatusField;
            }
            set {
                this.fire_Safety_StatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Fire_Safety_StatusSpecified {
            get {
                return this.fire_Safety_StatusFieldSpecified;
            }
            set {
                this.fire_Safety_StatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime Fire_Safety_Valid_Upto {
            get {
                return this.fire_Safety_Valid_UptoField;
            }
            set {
                this.fire_Safety_Valid_UptoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Fire_Safety_Valid_UptoSpecified {
            get {
                return this.fire_Safety_Valid_UptoFieldSpecified;
            }
            set {
                this.fire_Safety_Valid_UptoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Layout_Plan_No {
            get {
                return this.layout_Plan_NoField;
            }
            set {
                this.layout_Plan_NoField = value;
            }
        }
        
        /// <remarks/>
        public Approval_Status Approval_Status {
            get {
                return this.approval_StatusField;
            }
            set {
                this.approval_StatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Approval_StatusSpecified {
            get {
                return this.approval_StatusFieldSpecified;
            }
            set {
                this.approval_StatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Electricity_Agency {
            get {
                return this.electricity_AgencyField;
            }
            set {
                this.electricity_AgencyField = value;
            }
        }
        
        /// <remarks/>
        public Book_Of_Account Book_Of_Account {
            get {
                return this.book_Of_AccountField;
            }
            set {
                this.book_Of_AccountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Book_Of_AccountSpecified {
            get {
                return this.book_Of_AccountFieldSpecified;
            }
            set {
                this.book_Of_AccountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Electricity_Load_in_KW {
            get {
                return this.electricity_Load_in_KWField;
            }
            set {
                this.electricity_Load_in_KWField = value;
            }
        }
        
        /// <remarks/>
        public string Electricity_Consumer_No {
            get {
                return this.electricity_Consumer_NoField;
            }
            set {
                this.electricity_Consumer_NoField = value;
            }
        }
        
        /// <remarks/>
        public Transformer_Type Transformer_Type {
            get {
                return this.transformer_TypeField;
            }
            set {
                this.transformer_TypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Transformer_TypeSpecified {
            get {
                return this.transformer_TypeFieldSpecified;
            }
            set {
                this.transformer_TypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Source_Of_Water Source_Of_Water {
            get {
                return this.source_Of_WaterField;
            }
            set {
                this.source_Of_WaterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Source_Of_WaterSpecified {
            get {
                return this.source_Of_WaterFieldSpecified;
            }
            set {
                this.source_Of_WaterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string PHD_Consumer_No {
            get {
                return this.pHD_Consumer_NoField;
            }
            set {
                this.pHD_Consumer_NoField = value;
            }
        }
        
        /// <remarks/>
        public Building_Safety_Status Building_Safety_Status {
            get {
                return this.building_Safety_StatusField;
            }
            set {
                this.building_Safety_StatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Building_Safety_StatusSpecified {
            get {
                return this.building_Safety_StatusFieldSpecified;
            }
            set {
                this.building_Safety_StatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Year_of_Construction {
            get {
                return this.year_of_ConstructionField;
            }
            set {
                this.year_of_ConstructionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Year_of_ConstructionSpecified {
            get {
                return this.year_of_ConstructionFieldSpecified;
            }
            set {
                this.year_of_ConstructionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int No_of_Smart_Classes {
            get {
                return this.no_of_Smart_ClassesField;
            }
            set {
                this.no_of_Smart_ClassesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool No_of_Smart_ClassesSpecified {
            get {
                return this.no_of_Smart_ClassesFieldSpecified;
            }
            set {
                this.no_of_Smart_ClassesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Computer_Lab_Available Computer_Lab_Available {
            get {
                return this.computer_Lab_AvailableField;
            }
            set {
                this.computer_Lab_AvailableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Computer_Lab_AvailableSpecified {
            get {
                return this.computer_Lab_AvailableFieldSpecified;
            }
            set {
                this.computer_Lab_AvailableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int No_of_RO_Water_Purifier {
            get {
                return this.no_of_RO_Water_PurifierField;
            }
            set {
                this.no_of_RO_Water_PurifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool No_of_RO_Water_PurifierSpecified {
            get {
                return this.no_of_RO_Water_PurifierFieldSpecified;
            }
            set {
                this.no_of_RO_Water_PurifierFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int No_of_Non_RO_Water_Purifier {
            get {
                return this.no_of_Non_RO_Water_PurifierField;
            }
            set {
                this.no_of_Non_RO_Water_PurifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool No_of_Non_RO_Water_PurifierSpecified {
            get {
                return this.no_of_Non_RO_Water_PurifierFieldSpecified;
            }
            set {
                this.no_of_Non_RO_Water_PurifierFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard")]
    public enum Fire_Safety_Status {
        
        /// <remarks/>
        Certificate_Obtained,
        
        /// <remarks/>
        No_Certificate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard")]
    public enum Approval_Status {
        
        /// <remarks/>
        Approval_Obtained,
        
        /// <remarks/>
        Approval_Not_Obtained,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard")]
    public enum Book_Of_Account {
        
        /// <remarks/>
        PWD,
        
        /// <remarks/>
        IDCO,
        
        /// <remarks/>
        SOIC,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard")]
    public enum Transformer_Type {
        
        /// <remarks/>
        Own,
        
        /// <remarks/>
        Public,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard")]
    public enum Source_Of_Water {
        
        /// <remarks/>
        Own_Source,
        
        /// <remarks/>
        PHD_Source,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard")]
    public enum Building_Safety_Status {
        
        /// <remarks/>
        Safe,
        
        /// <remarks/>
        UnSafe,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard")]
    public enum Computer_Lab_Available {
        
        /// <remarks/>
        Yes,
        
        /// <remarks/>
        No,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard")]
    public partial class InstituteBuildingCard_Filter {
        
        private InstituteBuildingCard_Fields fieldField;
        
        private string criteriaField;
        
        /// <remarks/>
        public InstituteBuildingCard_Fields Field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        public string Criteria {
            get {
                return this.criteriaField;
            }
            set {
                this.criteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/institutebuildingcard")]
    public enum InstituteBuildingCard_Fields {
        
        /// <remarks/>
        Block_Code,
        
        /// <remarks/>
        Block_Name_if_any,
        
        /// <remarks/>
        Block_Type_if_any,
        
        /// <remarks/>
        No_Of_Class_Room,
        
        /// <remarks/>
        No_Of_Floor,
        
        /// <remarks/>
        Total_Floor_Area_in_sqft,
        
        /// <remarks/>
        Building_Length_in_meter,
        
        /// <remarks/>
        Building_Width_in_meter,
        
        /// <remarks/>
        Building_Height_in_meter,
        
        /// <remarks/>
        Fire_Safety_Status,
        
        /// <remarks/>
        Fire_Safety_Valid_Upto,
        
        /// <remarks/>
        Layout_Plan_No,
        
        /// <remarks/>
        Approval_Status,
        
        /// <remarks/>
        Electricity_Agency,
        
        /// <remarks/>
        Book_Of_Account,
        
        /// <remarks/>
        Electricity_Load_in_KW,
        
        /// <remarks/>
        Electricity_Consumer_No,
        
        /// <remarks/>
        Transformer_Type,
        
        /// <remarks/>
        Source_Of_Water,
        
        /// <remarks/>
        PHD_Consumer_No,
        
        /// <remarks/>
        Building_Safety_Status,
        
        /// <remarks/>
        Year_of_Construction,
        
        /// <remarks/>
        No_of_Smart_Classes,
        
        /// <remarks/>
        Computer_Lab_Available,
        
        /// <remarks/>
        No_of_RO_Water_Purifier,
        
        /// <remarks/>
        No_of_Non_RO_Water_Purifier,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ReadCompletedEventHandler(object sender, ReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InstituteBuildingCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InstituteBuildingCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ReadByRecIdCompletedEventHandler(object sender, ReadByRecIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadByRecIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadByRecIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InstituteBuildingCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InstituteBuildingCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ReadMultipleCompletedEventHandler(object sender, ReadMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InstituteBuildingCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InstituteBuildingCard[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void IsUpdatedCompletedEventHandler(object sender, IsUpdatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUpdatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUpdatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRecIdFromKeyCompletedEventHandler(object sender, GetRecIdFromKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecIdFromKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecIdFromKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateCompletedEventHandler(object sender, CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InstituteBuildingCard InstituteBuildingCard {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InstituteBuildingCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateMultipleCompletedEventHandler(object sender, CreateMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InstituteBuildingCard[] InstituteBuildingCard_List {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InstituteBuildingCard[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateCompletedEventHandler(object sender, UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InstituteBuildingCard InstituteBuildingCard {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InstituteBuildingCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateMultipleCompletedEventHandler(object sender, UpdateMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InstituteBuildingCard[] InstituteBuildingCard_List {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InstituteBuildingCard[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591